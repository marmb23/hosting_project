---
- name: Crear contenidor en Proxmox
  hosts: "{{ node }}"
  gather_facts: no
  vars:
    proxmox_host: "192.168.189.161"
    api_user: "root@pam"
    api_password: "P@ssw0rd"
    node: "{{ node }}"
    ct_id: "{{ ct_id }}"
    hostname: "{{ hostname }}"
    ostemplate: "smb:vztmpl/debian-12-standard_12.7-1_amd64.tar.zst"
    storage: "{{ storage }}"
    password: "{{ password }}"
    cores: "{{ cores | int }}"
    memory: "{{ memory | int }}"
    disk: "{{ disk | int }}"
    php_version: "{{ php_version }}"

  tasks:
    - name: DEBUG - Mostrar variables abans de crear el contenidor
      ansible.builtin.debug:
        msg:
          proxmox_host: "{{ proxmox_host }}"
          api_user: "{{ api_user }}"
          api_password: "{{ api_password }}"
          node: "{{ node }}"
          ct_id: "{{ ct_id }}"
          hostname: "{{ hostname }}"
          ostemplate: "{{ ostemplate }}"
          password: "{{ password }}"
          storage: "{{ storage }}"
          memory: "{{ memory }}"
          cores: "{{ cores }}"
          disk: "{{ disk }}"
          netif: '{"net0":"bridge=vmbr0,name=eth0,ip=dhcp"}'

    - name: Crear contenidor LXC
      community.general.proxmox:
        api_user: "{{ api_user }}"
        api_password: "{{ api_password }}"
        api_host: "{{ proxmox_host }}"
        node: "{{ node }}"
        vmid: "{{ ct_id | int }}"
        hostname: "{{ hostname }}"
        ostemplate: "{{ ostemplate }}"
        password: "{{ password }}"
        storage: "{{ storage }}"
        memory: "{{ memory | int }}"
        cores: "{{ cores | int }}"
        disk: "{{ disk | int }}"
        netif: '{"net0":"bridge=vmbr0,name=eth0,ip=dhcp"}'
        state: present
        validate_certs: no
        unprivileged: false

    - name: Arrencar el contenidor
      ansible.builtin.command: "pct start {{ ct_id }}"
      delegate_to: "{{ inventory_hostname }}"

    - name: Esperar que el contenidor estigui en execució
      ansible.builtin.command: "pct status {{ ct_id }}"
      register: ct_status
      until: "'status: running' in ct_status.stdout"
      retries: 10
      delay: 3
      delegate_to: "{{ inventory_hostname }}"

    - name: Instal·lar systemd-timesyncd al contenidor
      ansible.builtin.command: "pct exec {{ ct_id }} -- apt install -y systemd-timesyncd"
      delegate_to: "{{ inventory_hostname }}"

    - name: Activar el servei de sincronització horària
      ansible.builtin.command: "pct exec {{ ct_id }} -- systemctl start systemd-timesyncd"
      delegate_to: "{{ inventory_hostname }}"

    - name: Actualitzar índex de paquets al contenidor
      ansible.builtin.shell: >
        pct exec {{ ct_id }} -- bash -lc '
          set -eux
          apt-get update
        '
      delegate_to: "{{ inventory_hostname }}"

    - name: Instal·lar dependències necessàries
      ansible.builtin.shell: >
        pct exec {{ ct_id }} -- bash -lc '
          set -eux
          export DEBIAN_FRONTEND=noninteractive
          apt-get install -y \
            software-properties-common \
            gnupg2 \
            ca-certificates \
            lsb-release \
            apt-transport-https \
            curl
        '
      delegate_to: "{{ inventory_hostname }}"

    - name: Afegir clau GPG i repositori Sury
      ansible.builtin.shell: >
        pct exec {{ ct_id }} -- bash -lc '
          set -eux
          curl -fsSL https://packages.sury.org/php/apt.gpg \
            | gpg --dearmor > /etc/apt/trusted.gpg.d/php.gpg
          echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" \
            > /etc/apt/sources.list.d/php-sury.list
        '
      delegate_to: "{{ inventory_hostname }}"

    - name: Actualitzar índex després d'afegir el repositori
      ansible.builtin.shell: >
        pct exec {{ ct_id }} -- bash -lc '
          set -eux
          apt-get update
        '
      delegate_to: "{{ inventory_hostname }}"

    - name: Instal·lar PHP dins del contenidor
      ansible.builtin.command: "pct exec {{ ct_id }} -- apt install -y {{ php_version }}"
      delegate_to: "{{ inventory_hostname }}"